openapi: "3.0.0"


info:
  title: SamGTU Navigation
  version: "1.0"


servers:
  - url: http://localhost:8080/


paths:
  /map/building/{id}:
    get:
      tags: [Map]
      operationId: getMapBuildingById
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          description: Operation went successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/map_building"
        404:
          description: Map building was not found
                
  /map/domain/{id}:
    get:
      tags: [Map]
      operationId: getMapDomainById
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        200:
          description: Operation went successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/map_domain"
        404:
          description: Map domain was not found
                
  /navigation:
    post:
      tags: [ Navigation ]
      operationId: findPath
      requestBody:
        content:
          application/json:
            schema:
              title: NavigationRequest
              type: array
              items:
                $ref: "#/components/schemas/nav_point"
              minItems: 2
      responses:
        200:
          description: Operation went successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/nav_point"
        400:
          description: |
            Given points list size lesser than 2. Or point position
            is beyond of map object bounds. Or map objects are situated in
            different buildings.
        404:
          description: Unable to find path or given map objects don't exist
      

components:
  schemas:
    bounding_box:
      title: BoundingBox
      type: object
      properties:
        positionX: { type: number }
        positionY: { type: number }
        width: { type: number }
        height: { type: number }
    map_object:
      title: MapObject
      properties:
        id: { type: integer }
        type:
          type: string
          enum: [ HALL, ROOM, STAIRS, EXIT ]
        displayName: { type: string }
        displayDescription: { type: string }
        bboxes:
          type: array
          items: { $ref: "#/components/schemas/bounding_box"}
    map_building:
      title: MapBuilding
      type: object
      properties:
        id: { type: integer }
        latitude: { type: number }
        longitude: { type: number }
        displayName: { type: string }
        displayDescription: { type: string }
        domainIds:
          description: Key is ordinal number of floor, value is id of domain
          type: object
          additionalProperties:
            type: integer
          example:
            "-1": 1
            "1": 2
            "2": 3
    map_domain_image:
      title: DomainImage
      type: object
      properties:
        url: { type: string }
        width: { type: number }
        offsetX: { type: number }
        offsetY: { type: number }
    map_domain:
      title: MapDomain
      type: object
      properties:
        id: { type: integer }
        mapBuildingId: { type: integer }
        image:
          $ref: "#/components/schemas/map_domain_image"
        mapObjects:
          type: array
          items:
            $ref: "#/components/schemas/map_object"
    nav_point:
      title: NavigationPoint
      type: object
      properties:
        positionX: { type: number }
        positionY: { type: number }
        mapObjectId: { type: integer }


tags:
  - name: Map
  - name: Navigation
